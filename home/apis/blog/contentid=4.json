{"status":"success","code":200,"data":{"id":4,"title":"Vue博客前端总结——多页面设置","desc":"在前面的文章中也配置了多页面，在开发中我们在前后端中进行切换，很少同时一起编译，前后台任何的代码进行修改，然后从新编译输出,就会这样就会导致编译时间过长。由于vue 编译过程中会把公共的文件一起打包，会导致前后台的公共文件同时打到一起，这样会使前台加载文件变大。","content":"## 前言\n\n在前面的文章中也配置了多页面，但是还是不能够满足要求。因为在我发现，前后台在一个项目中，会引起一系列的问题。在开发中我们在前后端中进行切换，很少同时一起编译，前后台任何的代码进行修改，然后从新编译输出,就会这样就会导致编译时间过长。由于vue 编译过程中会把公共的文件一起打包，会导致前后台的公共文件同时打到一起，这样会使前台加载文件变大。\n\n## 如何解决呢\n\n如果我们将前后台分开打包。根据不同的参数进行不同的编译输出。这样就解决了问题\n\n#### 配置`package.json`\n\n通过如下的配置就能把前后端打包和运行分开，然后传入一个参数，在`vue.config.js`根据传入的参数不同就行配置\n\n```json\n \"scripts\": {\n        \"serve_home\": \"vue-cli-service serve --home\",\n        \"build_home\": \"vue-cli-service build --home\",\n        \"serve_admin\": \"vue-cli-service serve --admin\",\n        \"build_admin\": \"vue-cli-service build --admin \"\n    },\n```\n\n#### 配置`vue.config.js`\n\n```javascript\nconst CompressionWebpackPlugin = require('compression-webpack-plugin'); // gzip 压缩\nconst productionGzipExtensions = ['js', 'html', 'css'];\n// 代码压缩\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\nconst IS_PROD = process.env.NODE_ENV === 'production';\n//获取编译或运行中的参数\nlet appName = process.argv.slice(0).reverse()[0].replace('--', '');\n//根据参数配置输出的文件名\nlet outputPath = appName === 'home' ? 'home' : 'admin'\nmodule.exports = {\n    transpileDependencies: ['vue-savedata', 'vue-baberrage'],\n    //开发环境下在根目录运行，在生产环境下，前台是在网站根目录下，而后台在二级目录显的。\n    publicPath: IS_PROD ? outputPath == 'home' ? '/' : '../' + outputPath + '/' : '/',\n    //输出的目录。为什么是项目上一级目录，因为我是在服务器编译，而项目在网站根目录下的。\n    outputDir: '../' + outputPath,\n    pages: {\n        // about: {\n        //     entry: 'src/pages/admin/main.js',\n        //     template: 'public/admin.html',\n        //     filename: 'admin.html',\n        //     chunks: ['chunk-vendors', 'chunk-common', 'about'],\n        //     title: 'BAYMAX后台管理'\n        // },\n        index: {\n            //入口文件\n            entry: 'src/pages/' + appName + '/main.js',\n            //模板文件，其实可以一个，但是我的两个模板不一样。\n            template: `public/${appName}.html`,\n            filename: 'index.html',\n            chunks: [\"chunk-vendors\", \"chunk-common\", \"index\", 'runtime~index'],\n            //网站标题\n            title: appName === 'home' ? '云墨白的博客-Start with Hello World' : 'BAYMAX后台管理'\n        }\n    },\n    devServer: {\n        sockHost: \"localhost\",\n        disableHostCheck: true,\n        //端口其实也可以配置。前后台如果同时运行，端口被占用，vue会选择一个没有占用的端口\n        port: 8080, // 端口号\n        host: \"0.0.0.0\",\n        https: false, // https:{type:Boolean}shan\n        open: true, //配置自动启动浏览器\n        ……以下省略\n```\n\n## 问题\n\n通过上面的配置基本解决了问题，但对我来说还有一个问题，就是编译输出的目录都在网站的二级目录下，后台可以，但前台不行，因为我要可以直接输入域名直接访问到前台，所以每次有改动都要把文件移到网站根目录。\n\n### 解决\n\n我本来想通过ngnix服务器配置指定运行目录为二级目录。但我不知道如何去配置，所以我通过一个脚本，去自动化的去从远程仓库拉取最新代码，然后编译文件，再把文件移到网站根目录。\n\n```sh\necho 同步远程仓库\ngit pull\necho 编译主页\nnpm run build_home\necho 删除源文件\nrm -r ../js ../css ../img ../fonts\necho 拷贝主页\ncp -rf ../home/. ../\necho 删除编译文件\nrm -r ../home ../admin.html\necho 完成\n```\n\n> 本文为个人理解，若有不足，敬请指出","img":"https://p.pstatp.com/origin/137670000c5c9b6d72c72","classty":"前端","channels":null,"name":"Baymax","click":2,"like":1,"is_show":1,"head_show":1,"share_show":1,"copyright_show":1,"message_show":0,"deleted_at":1,"created_at":"2020-09-02T00:18:56.000000Z","updated_at":"2020-09-03T02:37:29.000000Z","label":["Vue"],"view_count":1,"prevArticle":[{"id":3,"title":"Vue博客前端总结——项目配置"}],"nextrAticle":[{"id":5,"title":"Vue博客前端总结——Vue全家桶"}]}}