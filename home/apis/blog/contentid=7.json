{"status":"success","code":200,"data":{"id":7,"title":"使用vue制作一个属于自己的音乐播放器","desc":"现在很多功能都可以使用插件，效率快、功能都很完善。那为什么要自己写呢！主要是现阶段的自己基础不牢。在自己去写的过程中才能知道自己的不足。这个音乐播放器，也就是本博客的音乐播放器。花费了我两天完成了基本功能，有音乐列表、循环、单曲、顺序等功能！","content":"### 前言\n\n> 其中在想在博客中添加音乐播放功能的时候，也考虑也其它音乐播放器插件如APlayer,页面和功能都能满足要求。而且播放页面也很好看，功能几乎都有。但是我不需要那么多功能，所以我自己尝试制作一个属于自己博客的音乐播放器。页面布局及样式参考[APlayer](APlayer)\n最新基于vue3版本音乐播放器，4种模式可选，还可以自定义播放模板[云墨白-音乐播放器](https://baymaxsjj.gitee.io/by-vue3-blog/#/)\n### 案例预览\n#### 最新预览\n<iframe src=\"https://baymaxsjj.gitee.io/by-vue3-blog/#/\" style=\"width:100%;height:500px\"></iframe>\n\n#### 旧版本预览\n\n```demo\n<style>\n\t\t.isshow {\n\t\t  left: -66px !important;\n\t\t}\n\t\t.music-row {\n\t\t  height: 66px;\n\t\t  bottom: 0px;\n\t\t  left: 0;\n\t\t  z-index: 999;\n\t\t  transition: all 0.5s;\n\t\t  margin-top: 60px;\n\t\t}\n\t\t.music-row:hover {\n\t\t  left: 0px !important;\n\t\t}\n\t\t.music-row .music {\n\t\t  transition: all 0.3s;\n\t\t  display: flex;\n\t\t  justify-content: left;\n\t\t}\n\t\t.music-row .music .music-img {\n\t\t  position: relative;\n\t\t  height: 66px;\n\t\t  width: 66px;\n\t\t  cursor: pointer;\n\t\t}\n\t\t.music-row .music .music-img:hover .music-toggle {\n\t\t  color: var(--main-5);\n\t\t  font-size: 25px;\n\t\t}\n\t\t.music-row .music .music-img .music-toggle {\n\t\t  width: 30px;\n\t\t  height: 30px;\n\t\t  font-size: 20px;\n\t\t  color: var(--main-6);\n\t\t  text-align: center;\n\t\t  line-height: 30px;\n\t\t  position: absolute;\n\t\t  bottom: 50%;\n\t\t  right: 50%;\n\t\t  transform: translate(50%,50%);\n\t\t  transition: all 0.3s;\n\t\t}\n\t\t.music-row .music .music-img .music-toggle:hover {\n\t\t  color: var(--main-5);\n\t\t}\n\t\t.music-row .music .music-img .musicActive {\n\t\t  bottom: 0px;\n\t\t  right: 0px;\n\t\t  transform: translate(0%,0%);\n\t\t}\n\t\t.music-row .music .music-content {\n\t\t  width: 334px;\n\t\t  height: 66px;\n\t\t  border-top: 1px solid #e9e9e9;\n\t\t  padding: 3px 5px;\n\t\t  background-color: #fff;\n\t\t  box-sizing: border-box;\n\t\t  position: relative;\n\t\t  display: flex;\n\t\t  flex-wrap: wrap;\n\t\t}\n\t\t.music-row .music .music-content .music-list {\n\t\t  width: 100%;\n\t\t  height: 100px;\n\t\t  background-color: #fff;\n\t\t  position: absolute;\n\t\t  top: -100px;\n\t\t  left: 0;\n\t\t  margin: 0;\n\t\t  padding: 5px;\n\t\t  overflow: auto;\n\t\t  box-sizing: border-box;\n\t\t  border-bottom: 1px solid #ccc;\n\t\t  border-top-left-radius: 4px;\n\t\t  border-top-right-radius: 4px;\n\t\t}\n\t\t.music-row .music .music-content .music-list li {\n\t\t  height: 30px;\n\t\t  line-height: 30px;\n\t\t  font-size: 14px;\n\t\t  padding: 0 4px;\n\t\t  margin: 2px 0;\n\t\t  color: var(--main-6);\n\t\t  background-color: #f8f9f9;\n\t\t  transition: all 0.3s;\n\t\t  cursor: pointer;\n\t\t  display: flex;\n\t\t  justify-content: space-between;\n\t\t}\n\t\t.music-row .music .music-content .music-list li span {\n\t\t  overflow: hidden;\n\t\t  white-space: nowrap;\n\t\t  text-overflow: ellipsis;\n\t\t}\n\t\t.music-row .music .music-content .active {\n\t\t  color: #f56c6c !important;\n\t\t  border-left: 3px solid #f56c6c;\n\t\t}\n\t\t.music-row .music .music-content .cont-top {\n\t\t  overflow: hidden;\n\t\t  white-space: nowrap;\n\t\t  text-overflow: ellipsis;\n\t\t  font-size: 15px;\n\t\t  width: 65%;\n\t\t  height: 40px;\n\t\t  line-height: 40px;\n\t\t}\n\t\t.music-row .music .music-content .cont-cont {\n\t\t  position: absolute;\n\t\t  top: 3px;\n\t\t  right: 0;\n\t\t}\n\t\t.music-row .music .music-content .cont-cont .cont-itme {\n\t\t  display: inline-block;\n\t\t  width: 30px;\n\t\t  height: 40px;\n\t\t  text-align: center;\n\t\t  line-height: 40px;\n\t\t  font-size: 18px;\n\t\t  transition: all 0.2s;\n\t\t}\n\t\t.music-row .music .music-content .cont-cont .cont-itme:hover {\n\t\t  cursor: pointer;\n\t\t  color: #ccc;\n\t\t}\n\t\t.music-row .music .music-content .cont-bottom {\n\t\t  position: absolute;\n\t\t  bottom: 0;\n\t\t  left: 0;\n\t\t  width: 100%;\n\t\t  height: 28px;\n\t\t  display: flex;\n\t\t  justify-content: left;\n\t\t  padding: 0 5px;\n\t\t  box-sizing: border-box;\n\t\t}\n\t\t.music-row .music .music-content .cont-bottom .bottom-progress {\n\t\t  width: 80%;\n\t\t  display: flex;\n\t\t  align-items: center;\n\t\t}\n\t\t.music-row .music .music-content .cont-bottom .time {\n\t\t  font-size: 12px;\n\t\t}\n\t\t.music-row .music .music-content .cont-bottom .music-func {\n\t\t  line-height: 28px;\n\t\t}\n\t\t.music-row .music .music-content .cont-bottom .music-func span {\n\t\t  margin: 0 3px;\n\t\t  cursor: pointer;\n\t\t}\n\t\t.music-row .music .music-btn {\n\t\t  height: 66px;\n\t\t  width: 18px;\n\t\t  background-color: #ccc;\n\t\t  cursor: pointer;\n\t\t  line-height: 66px;\n\t\t  border-bottom-right-radius: 4px;\n\t\t  border-top-right-radius: 4px;\n\t\t}\n\t\t\n\t\t</style>\n\t\t<link href=\"https://cdn.bootcdn.net/ajax/libs/element-ui/2.13.2/theme-chalk/index.css\" rel=\"stylesheet\">\n\t\t<script src=\"https://cdn.bootcdn.net/ajax/libs/vue/2.6.11/vue.min.js\"></script>\n\t\t<script src=\"https://cdn.bootcdn.net/ajax/libs/element-ui/2.13.2/index.js\"></script>\n\t\t<div id=\"app\">\n\t\t            <el-row class=\"music-row\" :class=\"{isshow:isShow}\">\n\t\t                <el-col :md=\"24\" class=\"music\">\n\t\t                    <!-- <audio id=\"music\" :src=\"musicInfo.url\"></audio> -->\n\t\t                    <!-- 音乐图片 -->\n\t\t\n\t\t                    <div class=\"music-img\">\n\t\t                        <el-avatar class=\"music-img\" :size=\"66\" shape=\"square\" :src=\"musicInfo.pic\">\n\t\t                            <i class=\"el-icon-loading\"></i>\n\t\t                            <!-- <img src=\"https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png\"/> -->\n\t\t                        </el-avatar>\n\t\t                        <span :class=\"{musicActive:isPlay}\" @click=\"pause\" class=\"iconfont music-toggle\"><span :class=\"isPlay?'el-icon-video-pause':'el-icon-video-play'\"></span>\n\t\t                    </span></div>\n\t\t                    <!-- 展开模块 -->\n\t\t                    <transition name=\"el-zoom-in-center\">\n\t\t                        <div v-show=\"muIsShow\" class=\"music-content\">\n\t\t                            <transition name=\"el-zoom-in-bottom\">\n\t\t                                <!-- 音乐列表模块 -->\n\t\t                                <div v-show=\"isList\" class=\"music-list scrollbar\">\n\t\t                                    <el-scrollbar style=\"width: 100%;\n\t\t            height: 100%;\">\n\t\t                                        <ul style=\"padding:0\">\n\t\t                                            <li :class=\"{active:index==ind}\" @click=\"index=ind\" v-for=\"(item,ind) of musics\" :key=\"item.musicId\">\n\t\t                                                <span>\n\t\t                                                    {{ind+1}}\n\t\t                                                    <span>{{item.title}}</span>\n\t\t                                                </span>\n\t\t                                                <span>{{item.name}}</span>\n\t\t                                            </li>\n\t\t                                        </ul>\n\t\t                                    </el-scrollbar>\n\t\t                                </div>\n\t\t                            </transition>\n\t\t                            <!-- 标题 作者 -->\n\t\t                            <div class=\"cont-top\">\n\t\t                                <span>{{musics[index].title}}</span>\n\t\t                                <span>---</span>\n\t\t                                <span>{{musics[index].name}}</span>\n\t\t                            </div>\n\t\t                            <!--暂停 快进   -->\n\t\t                            <div class=\"cont-cont\">\n\t\t                                <span class=\"cont-itme el-icon-d-arrow-left\" @click=\"index=index==0?musics.length-1:index-1\"></span>\n\t\t                                <span @click=\"pause\" class=\"cont-itme iconfont\" :class=\"isPlay?'el-icon-video-pause':'el-icon-video-play'\"></span>\n\t\t                                <span class=\"cont-itme el-icon-d-arrow-right\" @click=\"index=index==musics.length-1?0:index+1\"></span>\n\t\t                                <span class=\"cont-itme el-icon-menu\" @click=\"isList=!isList\"></span>\n\t\t                            </div>\n\t\t                            <!-- 音乐拖动条 时间 -->\n\t\t                            <div class=\"cont-bottom\">\n\t\t                                <div class=\"bottom-progress\">\n\t\t                                    <el-slider style=\"width:80%\" tooltip-class=\"content-bg8\" :format-tooltip=\"transTime\" @change=\"getVal()\" input-size=\"mini\" :min=\"0\" :max=\"max\" v-model=\"numb\"></el-slider>\n\t\t                                    <!-- <input  class=\"bottom-range\" v-model=\"numb\" type=\"range\" min=\"0\" :max=\"max\" @input=\"getVal()\"  :style=\"{background: '-webkit-linear-gradient(top, var(--main-5), var(--main-5)) 0% 0% / '+ numb*100/max +'% 100% no-repeat'}\"/> -->\n\t\t                                    <span class=\"time\" style=\"padding-left:10px\">{{newTime}}</span>\n\t\t                                    <span class=\"time\">/</span>\n\t\t                                    <span class=\"time\">{{time}}</span>\n\t\t                                </div>\n\t\t                                <!-- 循环播放  -->\n\t\t                                <div class=\"music-func\">\n\t\t                                    <span @click=\"cycle=cycle==2?0:cycle+1\" class=\"cont-itme iconfont\" :class=\"cycle==0?'el-icon-finished':cycle==1?'el-icon-refresh':'el-icon-sort'\"></span>\n\t\t                                </div>\n\t\t                            </div>\n\t\t                        </div>\n\t\t                    </transition>\n\t\t                    <!-- 扩展栏 -->\n\t\t                    <div class=\"music-btn\" @click=\"MuBtnClick\">\n\t\t                        <i :class=\"muIsShow?'el-icon-arrow-left':'el-icon-arrow-right'\"></i>\n\t\t                    </div>\n\t\t                </el-col>\n\t\t            </el-row>\n\t\t        </div>\n\t\t        <script>\n\t\t            var Main = {\n\t\t                data() {\n\t\t                    return {\n\t\t                        index: 0, //播放列表\n\t\t                        muIsShow: false, //是否显示\n\t\t                        isPlay: false, //是否播放\n\t\t                        canplay: false, //是否能播放\n\t\t                        loading: false, //是否自动播放\n\t\t                        cycle: 0,\n\t\t                        numb: 0,\n\t\t                        time: \"00:00\",\n\t\t                        newTime: \"00:00\",\n\t\t                        max: 0,\n\t\t                        audio: \"\",\n\t\t                        musicInfo: {},\n\t\t                        isList: false,\n\t\t                        isShow: false,\n\t\t                        setTimeout: null,\n\t\t                        musics: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"music_id\": \"1463165983\",\n\t\t\t\t\t\t\t\t\t\t\"title\": \"最美的期待\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"周笔畅\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"netease\",\n\t\t\t\t\t\t\t\t\t\t\"url\":'https://www.0dutv.com/plug/down/up2.php/212877015.mp3',\n\t\t\t\t\t\t\t\t\t\t\"pic\":'https://p.pstatp.com/origin/1372100011fb653db9634'\n\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\"music_id\": \"515453363\",\n\t\t\t\t\t\t\t\t\t\t\"title\": \"过客\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"阿涵\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"netease\",\n\t\t\t\t\t\t\t\t\t\t\"url\":'https://www.0dutv.com/plug/down/up2.php/109717925.mp3',\n\t\t\t\t\t\t\t\t\t\t\"pic\":'https://p.pstatp.com/origin/1372100011fb653db9634'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\n\t\t                    }\n\t\t                },\n\t\t                methods: {\n\t\t                    // 打开和关闭音乐收缩栏\n\t\t                    MuBtnClick() {\n\t\t                        this.muIsShow = !this.muIsShow;\n\t\t                        this.hidden(1500);\n\t\t                    },\n\t\t                    hidden(time) {\n\t\t                        if (this.muIsShow == false) {\n\t\t                            this.setTimeout = setTimeout(() => {\n\t\t                                this.isShow = true;\n\t\t                            }, time);\n\t\t                        } else {\n\t\t                            clearTimeout(this.setTimeout);\n\t\t                            this.isShow = false;\n\t\t                        }\n\t\t                    },\n\t\t                    // 播放暂停\n\t\t                    pause() {\n\t\t                        if (this.audio !== null && this.canplay) {\n\t\t                            this.loading = true;\n\t\t                            if (this.audio.paused) {\n\t\t                                this.audio.play(); // 播放\n\t\t                                this.isPlay = true;\n\t\t                            } else {\n\t\t                                this.audio.pause(); // 暂停\n\t\t                                this.isPlay = false;\n\t\t                                console.log(\"暂停被调用了\");\n\t\t                            }\n\t\t                        } else {\n\t\t                            this.$message({\n\t\t                                showClose: true,\n\t\t                                message: \"音乐还没有加载成功呢！\",\n\t\t                                type: \"warning\",\n\t\t                            });\n\t\t                        }\n\t\t                    },\n\t\t                    // 快进音乐\n\t\t                    getVal() {\n\t\t                        if (!this.audio.paused || this.audio.currentTime != 0) {\n\t\t                            this.audio.currentTime = this.numb;\n\t\t                            if (this.numb == Math.floor(this.max)) {\n\t\t                                this.audio.pause();\n\t\t                                this.isPlay = false;\n\t\t                            }\n\t\t                        }\n\t\t                    },\n\t\t                    // 获取音乐总时长\n\t\t                    getTime() {\n\t\t                        let time = this.audio.duration;\n\t\t                        this.max = time;\n\t\t                        //总共时长的秒数\n\t\t                        this.time = this.transTime(time);\n\t\t                    },\n\t\t                    // 时间格式化位00：00\n\t\t                    formatTime(value) {\n\t\t                        let time = \"\";\n\t\t                        let s = value.split(\":\");\n\t\t                        let i = 0;\n\t\t                        for (; i < s.length - 1; i++) {\n\t\t                            time += s[i].length == 1 ? \"0\" + s[i] : s[i];\n\t\t                            time += \":\";\n\t\t                        }\n\t\t                        time += s[i].length == 1 ? \"0\" + s[i] : s[i];\n\t\t                        return time;\n\t\t                    },\n\t\t                    // 把毫秒变成时分秒\n\t\t                    transTime(value) {\n\t\t                        let time = \"\";\n\t\t                        let h = parseInt(value / 3600);\n\t\t                        value %= 3600;\n\t\t                        let m = parseInt(value / 60);\n\t\t                        let s = parseInt(value % 60);\n\t\t                        if (h > 0) {\n\t\t                            time = this.formatTime(h + \":\" + m + \":\" + s);\n\t\t                        } else {\n\t\t                            time = this.formatTime(m + \":\" + s);\n\t\t                        }\n\t\t                        return time;\n\t\t                    },\n\t\t                    getMusic() {\n\t\t                        if (!this.musics[this.index].pause) {\n\t\t                            this.musicInfo = this.musics[this.index]\n\t\t                            this.audio.src = this.musics[this.index].url;\n\t\t                            // console.log(\"获取音乐\");\n\t\t                            // const qs = require(\"qs\");\n\t\t                            // let that = this;\n\t\t                            // console.log(that.musics[that.index].type);\n\t\t                            // this.$post(\n\t\t                            //         \"/music\",\n\t\t                            //         qs.stringify({\n\t\t                            //             input: that.musics[that.index].music_id,\n\t\t                            //             filter: \"id\",\n\t\t                            //             type: that.musics[that.index].type,\n\t\t                            //             page: 1,\n\t\t                            //         })\n\t\t                            //     )\n\t\t                            //     .then(function(res) {\n\t\t                            //         that.musicInfo = res.data[0];\n\t\t                            //         that.audio.src = that.musicInfo.url;\n\t\t                            //     })\n\t\t                            //     .catch(function(error) {\n\t\t                            //         that.audio.pause(); // 暂停\n\t\t                            //         that.isPlay = false;\n\t\t                            //     });\n\t\t                        } else {\n\t\t                            console.log(this.index);\n\t\t                            this.musicInfo = {\n\t\t                                title: this.musics[this.index].title,\n\t\t                                author: this.musics[this.index].name,\n\t\t                                pic: this.musics[this.index].img,\n\t\t                                url: this.musics[this.index].url,\n\t\t                            };\n\t\t                            this.audio.src = this.musics[this.index].url;\n\t\t                        }\n\t\t                    },\n\t\t                    // 获取我的音乐列表\n\t\t                    getList() {\n\t\t                        this.index = Math.floor(Math.random() * this.musics.length);\n\t\t                        this.length = this.musics.length;\n\t\t                        this.getMusic();\n\t\t                        // let that = this;\n\t\t                        // this.$get(\"url\")\n\t\t                        //   .then(function (res) {\n\t\t                        //     that.musics = res.data;\n\t\t                        //     that.index = Math.floor(Math.random() * that.musics.length);\n\t\t                        //     that.length = that.musics.length;\n\t\t                        //     that.getMusic();\n\t\t                        //   })\n\t\t                        //   .catch(function (error) {});\n\t\t                    },\n\t\t\t\t\t\t\tmError() {\n\t\t\t\t\t\t\t      if (this.loading) {\n\t\t\t\t\t\t\t        console.log(\"出错\");\n\t\t\t\t\t\t\t        this.$message({\n\t\t\t\t\t\t\t          showClose: true,\n\t\t\t\t\t\t\t          message: \"播放错误,自动播放下一首\",\n\t\t\t\t\t\t\t          type: \"error\",\n\t\t\t\t\t\t\t        });\n\t\t\t\t\t\t\t        if (this.musics[this.index].musicInfo) {\n\t\t\t\t\t\t\t          delete this.musics[this.index].musicInfo;\n\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t        this.index = this.index == this.musics.length - 1 ? 0 : this.index + 1;\n\t\t\t\t\t\t\t      }\n\t\t\t\t\t\t\t    },\n\t\t\t\t\t\t\t    mCanplay() {\n\t\t\t\t\t\t\t      this.canplay = true;\n\t\t\t\t\t\t\t      if (this.loading) {\n\t\t\t\t\t\t\t        this.audio.play(); // 播放\n\t\t\t\t\t\t\t        this.isPlay = true;\n\t\t\t\t\t\t\t      }\n\t\t\t\t\t\t\t      this.getTime();\n\t\t\t\t\t\t\t    },\n\t\t\t\t\t\t\t    mTimeUpdate() {\n\t\t\t\t\t\t\t      this.numb = this.audio.currentTime;\n\t\t\t\t\t\t\t      this.newTime = this.transTime(this.audio.currentTime);\n\t\t\t\t\t\t\t    },\n\t\t\t\t\t\t\t    mEnded() {\n\t\t\t\t\t\t\t      if (this.cycle == 0) {\n\t\t\t\t\t\t\t        this.audio.pause(); // 暂停\n\t\t\t\t\t\t\t        this.isPlay = false;\n\t\t\t\t\t\t\t      } else if (this.cycle == 1) {\n\t\t\t\t\t\t\t        this.audio.play(); // 播放\n\t\t\t\t\t\t\t        this.isPlay = true;\n\t\t\t\t\t\t\t      } else {\n\t\t\t\t\t\t\t        this.index = this.index == this.musics.length - 1 ? 0 : this.index + 1;\n\t\t\t\t\t\t\t      }\n\t\t\t\t\t\t\t    },\n\t\t                },\n\t\t                mounted() {\n\t\t                    this.hidden(5000);\n\t\t                    let that = this;\n\t\t                },\n\t\t                 created() {\n\t\t                   // this.audio=document.getElementById('music')\n\t\t                   this.audio = document.createElement(\"audio\");\n\t\t                   this.getList();\n\t\t                   let that = this;\n\t\t                   this.audio.addEventListener(\"canplay\", that.mCanplay, false),\n\t\t                   this.audio.addEventListener(\"timeupdate\", that.mTimeUpdate, false);\n\t\t                   this.audio.addEventListener(\"ended\", that.mEnded, false);\n\t\t                   this.audio.addEventListener(\"error\", that.mError, false);\n\t\t                 },\n\t\t\t\t\t\t  beforeDestroy() {\n\t\t\t\t\t\t     let that=this\n\t\t\t\t\t\t     this.audio.removeEventListener(\"canplay\", that.mCanplay);\n\t\t\t\t\t\t     this.audio.removeEventListener(\"ended\", that.mEnded);\n\t\t\t\t\t\t     this.audio.removeEventListener(\"error\", that.mError);\n\t\t\t\t\t\t     this.audio.removeEventListener(\"timeupdate\", that.mTimeUpdate);\n\t\t\t\t\t\t   },\n\t\t                watch: {\n\t\t                    index(val) {\n\t\t                        if (this.loading) {\n\t\t                            this.audio.play(); // 播放\n\t\t                            this.isPlay = true;\n\t\t                        }\n\t\t                        this.canplay = false;\n\t\t                        this.audio.currentTime = 0;\n\t\t                        // this.audio.pause();\n\t\t                        this.audio.src = \"\";\n\t\t                        this.getMusic();\n\t\t                    },\n\t\t                },\n\t\t            }\n\t\t            var Ctor = Vue.extend(Main)\n\t\t            new Ctor().$mount(document.getElementById('app'))\n\t\t        </script>\n```\n\n## 了解audio\n\n### html标签\n\n```demo\n<audio src=\"http://www.0dutv.com/plug/down/up2.php/109717925.mp3\" controls=\"controls\">\nYour browser does not support the audio element.\n</audio>\n\n```\n\n### 属性\n\n| 属性     | 值       | 描述                                                         |\n| -------- | -------- | ------------------------------------------------------------ |\n| autoplay | autoplay | 如果出现该属性，则音频在就绪后马上播放。                     |\n| controls | controls | 如果出现该属性，则向用户显示控件，比如播放按钮。             |\n| loop     | loop     | 如果出现该属性，则每当音频结束时重新开始播放。               |\n| muted    | muted    | 规定视频输出应该被静音。                                     |\n| preload  | preload  | 如果出现该属性，则音频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性。 |\n| src      | url      | 要播放的音频的 URL。                                         |\n\n> 内容来源---[W3School](https://www.w3school.com.cn/tags/tag_audio.asp)\n\n### js创建（本案例使用）\n\n```js\n//创建audio,不会在页面中显示。\n var audio=document.createElement(\"audio\");\n//设置src,播放地址。\naudio.src ='http://url'\n```\n\n### 事件\n\n| 属性             | 值     | 描述                                                         |\n| ---------------- | ------ | ------------------------------------------------------------ |\n| oncanplay        | script | 当文件就绪可以开始播放时运行的脚本（缓冲已足够开始时）。     |\n| oncanplaythrough | script | 当媒介能够无需因缓冲而停止即可播放至结尾时运行的脚本。       |\n| onended          | script | 当媒介已到达结尾时运行的脚本（可发送类似“感谢观看”之类的消息 |\n| onpause          | script | 当媒介被用户或程序暂停时运行的脚本。                         |\n| onplay           | script | 当媒介已就绪可以开始播放时运行的脚本。                       |\n| onplaying        | script | 当媒介已开始播放时运行的脚本。                               |\n| onprogress       | script | 当浏览器正在获取媒介数据时运行的脚本。                       |\n| ontimeupdate     | script | 当播放位置改变时（比如当用户快进到媒介中一个不同的位置时）运行的脚本。 |\n\n> 内容来源---[W3School](https://www.w3school.com.cn/tags/html_ref_eventattributes.asp)\n\n## 案例准备\n\n### 格式化时间\n\n```JavaScript\n// 获取音乐总时长\n    getTime() {\n      let time = this.audio.duration;\n      this.max = time;\n      //总共时长的秒数\n      this.time = this.transTime(time);\n    },\n    // 时间格式化位00：00\n    formatTime(value) {\n      let time = \"\";\n      let s = value.split(\":\");\n      let i = 0;\n      for (; i < s.length - 1; i++) {\n        time += s[i].length == 1 ? \"0\" + s[i] : s[i];\n        time += \":\";\n      }\n      time += s[i].length == 1 ? \"0\" + s[i] : s[i];\n      return time;\n    },\n    // 把毫秒变成时分秒\n    transTime(value) {\n      let time = \"\";\n      let h = parseInt(value / 3600);\n      value %= 3600;\n      let m = parseInt(value / 60);\n      let s = parseInt(value % 60);\n      if (h > 0) {\n        time = this.formatTime(h + \":\" + m + \":\" + s);\n      } else {\n        time = this.formatTime(m + \":\" + s);\n      }\n      return time;\n    },\n\n```\n\n### 创建及绑定事件\n\n```JavaScript\ncreated() {\n    // 创建Audio\t\n    this.audio = document.createElement(\"audio\");\n    this.getList();\n    let that = this;\n    // 当音乐准备就绪时的操作\n    this.audio.addEventListener(\n      \"canplay\",\n      function () {\n        console.log(\"加载成功\");\n        console.log(that.musicInfo.url);\n        that.canplay = true;\n\t//防止自动播放\n        if (that.loading) {\n          that.audio.play(); // 播放\n          that.isPlay = true;\n        }\n        that.getTime();\n        // that.pause()\n      },\n      false\n    ),\n//快进时的操作，同步时间\n      this.audio.addEventListener(\n        \"timeupdate\",\n        function () {\n          that.numb = that.audio.currentTime;\n          that.newTime = that.transTime(that.audio.currentTime);\n        },\n        false\n      );\n//当音乐播放到结束后的操作，\n    this.audio.addEventListener(\n      \"ended\",\n      function () {\n        if (that.cycle == 0) {\n          that.audio.pause(); // 暂停\n          that.isPlay = false;\n        } else if (that.cycle == 1) {\n          that.audio.play(); // 播放\n          that.isPlay = true;\n        } else {\n            that.index == that.musics.length - 1 ? 0 : that.index + 1;\n        }\n      },\n      false\n    );\n  },\n\n```\n\n### 播放暂停、快进\n\n```JavaScript\n// 播放暂停\n    pause() {\n      if (this.audio !== null && this.canplay) {\n        this.loading = true;\n        if (this.audio.paused) {\n          this.audio.play(); // 播放\n          this.isPlay = true;\n        } else {\n          this.audio.pause(); // 暂停\n          this.isPlay = false;\n          console.log(\"暂停被调用了\");\n        }\n      } else {\n        this.$message({\n          showClose: true,\n          message: \"音乐还没有加载成功呢！\",\n          type: \"warning\",\n        });\n      }\n    },\n    // 快进音乐\n    getVal() {\n      if (!this.audio.paused || this.audio.currentTime != 0) {\n        this.audio.currentTime = this.numb;\n        if (this.numb == Math.floor(this.max)) {\n          this.audio.pause();\n          this.isPlay = false;\n        }\n      }\n    },\n```\n\n### 切换\n\n主要时通过监听器，监听音乐id的变化来切换歌曲\n\n```JavaScript\n watch: {\n    index(val) {\n      if (this.loading) {\n        this.audio.play(); // 播放\n        this.isPlay = true;\n      }\n      this.canplay = false;\n      this.audio.currentTime = 0;\n      // this.audio.pause();\n      this.audio.src = \"\";\n      this.getMusic();\n    },\n  },\n```","img":"https://p.pstatp.com/origin/137a300019d2c62362626","classty":"前端","channels":"{\"jianshu\":\"https://www.jianshu.com/p/c3561d620215\"}","name":"Baymax","click":3,"like":1,"is_show":1,"head_show":1,"share_show":1,"copyright_show":1,"message_show":1,"deleted_at":1,"created_at":"2020-09-08T12:01:30.000000Z","updated_at":"2020-11-22T07:42:12.000000Z","label":["Vue"],"view_count":1,"prevArticle":[{"id":6,"title":"Vue前端总结——SEO优化"}],"nextrAticle":[{"id":8,"title":"前端Flex 布局各种使用小方法"}]}}